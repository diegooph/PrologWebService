<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<!-- Documentação para configuração do checkstyle: https://checkstyle.org/ -->
<module name="Checker">
    <module name="TreeWalker">
        <!-- Nomenclatura -->
        <!-- Valida a nomenclatura dos atributos de classe. -->
        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
        </module>
        <!-- Valida a nomenclatura dos métodos declarados. -->
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="allowClassName" value="false"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
        </module>
        <!-- Valida a nomenclatura dos variáveis locais. -->
        <module name="LocalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="allowOneCharVarInForLoop" value="false"/>
        </module>
        <!-- Valida a nomenclatura dos variáveis locais, incuindo as final. -->
        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="tokens" value="VARIABLE_DEF, PARAMETER_DEF, RESOURCE "/>
        </module>
        <!-- Valida a nomenclatura das variáveis em lambdas. -->
        <module name="LambdaParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>
        <!-- Valida a nomenclatura das variáveis de exceção. -->
        <module name="CatchParameterName">
            <property name="format" value="^(e|t|ex|[a-z][a-z][a-zA-Z]+)$"/>
        </module>
        <!-- Valida a nomenclatura das CONSTANTES. Semelhante ao MemberName, porém focado para constantes. -->
        <module name="ConstantName">
            <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
        </module>
        <!-- Valida a nomenclatura das packages. -->
        <module name="PackageName">
            <property name="format" value="^[a-z0-9]+(\._?[a-z0-9]*)*$"/>
        </module>
        <!-- Valida a nomenclatura dos parâmetros de métodos. -->
        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="ignoreOverridden" value="false"/>
            <property name="accessModifiers" value="public, protected, package, private"/>
        </module>
        <!-- Valida a nomenclatura das variáveis internas de métodos. -->
        <module name="PatternVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>
        <!-- Valida a nomenclatura dos nomes de classes. -->
        <module name="TypeName">
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage" value="true"/>
            <property name="applyToPrivate" value="true"/>
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF"/>
        </module>
        <!-- Fim Nomenclatura -->

        <!-- Indentação, whitespaces e linebreaks -->
        <!-- Valida os espaços em branco nos diamonds operators '<>'. -->
        <module name="GenericWhitespace"/>
        <!-- Valida os espaços em branco nas chamadas de métodos. -->
        <module name="MethodParamPad">
            <property name="allowLineBreaks" value="false"/>
            <property name="option" value="nospace"/>
            <property name="tokens"
                      value="CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF, SUPER_CTOR_CALL, ENUM_CONSTANT_DEF, RECORD_DEF"/>
        </module>
        <!-- Valida os espaços em branco e quebra de linhas em imports. -->
        <module name="NoLineWrap">
            <property name="tokens" value="IMPORT, STATIC_IMPORT, PACKAGE_DEF"/>
        </module>
        <!-- Valida os espaços em branco após os tokens. -->
        <module name="NoWhitespaceAfter">
            <property name="allowLineBreaks" value="true"/>
            <property name="tokens"
                      value="ARRAY_INIT, AT, INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, ARRAY_DECLARATOR, INDEX_OP"/>
        </module>
        <!-- Valida os espaços em branco antes dos tokens. -->
        <module name="NoWhitespaceBefore">
            <property name="allowLineBreaks" value="false"/>
            <property name="tokens"
                      value="COMMA, SEMI, POST_INC, POST_DEC, ELLIPSIS, LABELED_STAT"/>
        </module>
        <!-- Valida os espaços em branco em chamadas com paranteses. -->
        <module name="ParenPad">
            <property name="option" value="nospace"/>
            <property name="tokens"
                      value="ANNOTATION, ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, DOT, ENUM_CONSTANT_DEF, EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL, METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL, LAMBDA, RECORD_DEF"/>
        </module>
        <!-- Valida quebra de linha em separadores. -->
        <module name="SeparatorWrap">
            <property name="option" value="nl"/>
            <property name="tokens" value="DOT"/>
        </module>
        <!-- Valida quebra de linha em separadores. -->
        <module name="SeparatorWrap">
            <property name="option" value="eol"/>
            <property name="tokens" value="COMMA, SEMI, RPAREN"/>
        </module>
        <!-- Valida único espaço em branco após separadores. -->
        <module name="SingleSpaceSeparator">
            <property name="validateComments" value="true"/>
        </module>
        <!-- Valida espaços em branco em casts de dados. -->
        <module name="TypecastParenPad">
            <property name="option" value="nospace"/>
        </module>
        <!-- Valida espaços em branco após tokens. -->
        <module name="WhitespaceAfter">
            <property name="tokens"
                      value="COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, DO_WHILE"/>
        </module>
        <!-- Valida espaços em branco entre tokens. -->
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="false"/>
            <property name="allowEmptyMethods" value="false"/>
            <property name="allowEmptyTypes" value="false"/>
            <property name="allowEmptyLoops" value="false"/>
            <property name="allowEmptyLambdas" value="false"/>
            <property name="allowEmptyCatches" value="false"/>
            <property name="ignoreEnhancedForColon" value="true"/>
            <property name="tokens"
                      value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND"/>
        </module>
        <!-- Fim Indentação -->

        <!-- JavaDoc -->
        <!-- Valida se o javadoc está posicionado corretamente. -->
        <module name="InvalidJavadocPosition"/>
        <!-- Valida se a blocktag do javadoc está posicionada corretamente. -->
        <module name="JavadocBlockTagLocation">
            <property name="violateExecutionOnNonTightHtml" value="false"/>
            <property name="tags"
                      value="author, deprecated, exception, hidden, param, provides, return, see, serial, serialData, serialField, since, throws, uses, version"/>
        </module>
        <!-- Valida que o início da descrição do javadoc está na segunda linha. -->
        <module name="JavadocContentLocationCheck">
            <property name="location" value="second_line"/>
        </module>
        <!-- Valida, se houver, o javadoc em métodos. -->
        <module name="JavadocMethod">
            <property name="allowedAnnotations" value="Override"/>
            <property name="validateThrows" value="false"/>
            <property name="scope" value="private"/>
            <property name="allowMissingParamTags" value="false"/>
            <property name="allowMissingReturnTag" value="false"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF"/>
        </module>
        <!-- Valida espaço em branco na descrição do javadoc. -->
        <module name="JavadocMissingWhitespaceAfterAsterisk">
            <property name="violateExecutionOnNonTightHtml" value="false"/>
        </module>
        <!-- Valida linha em branco na descrição do javadoc. -->
        <module name="JavadocParagraph">
            <property name="violateExecutionOnNonTightHtml" value="false"/>
            <property name="allowNewlineParagraph" value="false"/>
        </module>
        <!-- Valida os comentários presentes no javadoc para garantir que estão bem formatados. -->
        <module name="JavadocStyle">
            <property name="scope" value="private"/>
            <property name="checkFirstSentence" value="false"/>
            <property name="checkEmptyJavadoc" value="false"/>
            <property name="checkHtml" value="true"/>
            <property name="tokens"
                      value="ANNOTATION_DEF, ANNOTATION_FIELD_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, METHOD_DEF, PACKAGE_DEF, VARIABLE_DEF, RECORD_DEF, COMPACT_CTOR_DEF"/>
        </module>
        <!-- Valida os comentários de javadoc nas classes. -->
        <module name="JavadocType">
            <property name="scope" value="private"/>
            <property name="authorFormat" value=".*\s\(https://github.com/.*\)"/>
            <property name="allowMissingParamTags" value="false"/>
            <property name="allowUnknownTags" value="true"/>
            <property name="allowedAnnotations" value="Generated"/>
            <property name="tokens" value="INTERFACE_DEF, CLASS_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF"/>
        </module>
        <!-- Valida que o javadoc possue quebra de linha entre as tags. -->
        <module name="RequireEmptyLineBeforeBlockTagGroup">
            <property name="violateExecutionOnNonTightHtml" value="false"/>
        </module>
        <!-- Fim JavaDoc -->

        <!-- Annotations -->
        <module name="AnnotationLocation">
            <property name="allowSamelineMultipleAnnotations" value="false"/>
            <property name="allowSamelineSingleParameterlessAnnotation"
                      value="false"/>
            <property name="allowSamelineParameterizedAnnotation" value="true"/>
        </module>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>
        <!-- Fim Annotations -->

        <!-- Organização de código -->
        <module name="DeclarationOrder">
            <property name="ignoreModifiers" value="true"/>
        </module>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="FallThrough"/>
        <module name="FinalLocalVariable"/>
        <module name="InnerAssignment"/>
        <module name="MissingSwitchDefault"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NoArrayTrailingComma"/>
        <module name="NoEnumTrailingComma"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="RequireThis"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="UnnecessaryParentheses"/>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInEnumeration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>
        <module name="UnusedImports"/>
        <!-- Fim Organização de código -->
    </module>
</module>