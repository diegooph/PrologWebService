CREATE OR REPLACE FUNCTION FUNC_RELATO_RELATORIO_QTD_RELATOS_PENDENTES_BY_STATUS(
  F_COD_UNIDADES                  BIGINT[],
  F_DATA_HOJE_UTC                 TIMESTAMPTZ,
  F_DIAS_RETROATIVOS_PARA_BUSCAR  BIGINT)
RETURNS TABLE(
  "QTD_PENDENTES_CLASSIFICACAO"        BIGINT,
  "QTD_PENDENTES_FECHAMENTO"           BIGINT
  )
LANGUAGE PLPGSQL
AS $$
DECLARE
  -- TODO: DAR UMA OLHADA ESPECIAL NESSA SUBTRAÇÃO AQUI :thinking_face:
  -- ESSA É UMA SUBTRAÇÃO QUE USAMOS EM DIVERSAS FUNCTIONS, PORÉM ELA SOMA 1 DIA EM F_DATA_HOJE_UTC:
  --   DATA_INICIAL       DATE := F_DATA_HOJE_UTC + INTERVAL '1' DAY - (INTERVAL '1' DAY * F_DIAS_RETROATIVOS_PARA_BUSCAR);
  -- ENTRETANTO, AO SOMAR, RETORNA O INTERVALO ERRADO NOS TESTES QUE FIZ, POR ISSO REMOVI A SOMA DE 1 DIA NESSA CONTA.
  -- :thinking_face:
  DATA_INICIAL                      DATE := F_DATA_HOJE_UTC - (INTERVAL '1' DAY * F_DIAS_RETROATIVOS_PARA_BUSCAR);
  DATA_FINAL                        DATE := F_DATA_HOJE_UTC + INTERVAL '1' DAY;
  RELATO_PENDENTE_CLASSIFICACAO     VARCHAR := 'PENDENTE_CLASSIFICACAO';
  RELATO_PENDENTE_FECHAMENTO        VARCHAR := 'PENDENTE_FECHAMENTO';
BEGIN
  RETURN QUERY
SELECT
  COUNT(R.STATUS)
    FILTER (WHERE R.STATUS = RELATO_PENDENTE_CLASSIFICACAO) AS QTD_PENDENTES_CLASSIFICACAO,
  COUNT(R.STATUS)
    FILTER (WHERE R.STATUS = RELATO_PENDENTE_FECHAMENTO) AS QTD_PENDENTES_FECHAMENTO
FROM RELATO R
    WHERE
      R.COD_UNIDADE = ANY (F_COD_UNIDADES)
      AND (R.DATA_HORA_LOCAL AT TIME ZONE TZ_UNIDADE(R.COD_UNIDADE)) :: DATE BETWEEN DATA_INICIAL AND DATA_FINAL;
END;
$$;