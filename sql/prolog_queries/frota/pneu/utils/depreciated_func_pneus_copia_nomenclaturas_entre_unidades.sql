CREATE OR REPLACE FUNCTION DEPRECIATED_FUNC_PNEUS_COPIA_NOMENCLATURAS_ENTRE_UNIDADES(F_COD_UNIDADE_ORIGEM_COPIA_NOMENCLATURAS BIGINT,
                                                                                     F_COD_UNIDADES_DESTINO_NOMENCLATURAS BIGINT[],
                                                                                     OUT AVISO_NOMENCLATURAS_COPIADAS TEXT)
    RETURNS TEXT
    LANGUAGE PLPGSQL
AS
$$
BEGIN
    -- REMOVE UNIDADES DUPLICADAS DO ARRAY DE DESTINO.
    F_COD_UNIDADES_DESTINO_NOMENCLATURAS := ARRAY_DISTINCT(F_COD_UNIDADES_DESTINO_NOMENCLATURAS);

    -- VERIFICA SE A UNIDADE DE ORIGEM NÃO ESTÁ ENTRE AS DE DESTINO.
    IF F_COD_UNIDADE_ORIGEM_COPIA_NOMENCLATURAS = ANY (F_COD_UNIDADES_DESTINO_NOMENCLATURAS)
    THEN
        RAISE EXCEPTION 'O CÓDIGO DA UNIDADE DE ORIGEM NÃO PODE CONSTAR NAS UNIDADES DE DESTINO!';
    END IF;

    -- VERIFICA SE TODAS AS UNIDADES DE DESTINO PERTENCEM A MESMA EMPRESA.
    IF (SELECT COUNT(DISTINCT U.COD_EMPRESA)
        FROM UNIDADE U
        WHERE U.CODIGO = ANY (F_COD_UNIDADES_DESTINO_NOMENCLATURAS)) > 1
    THEN
        RAISE EXCEPTION 'SÓ É POSSÍVEL COPIAR AS NOMENCLATURAS PARA UNIDADES DA MESMA EMPRESA!';
    END IF;

    -- VERIFICA SE A EMPRESA DA UNIDADE DE ORIGEM É A MESMA DAS UNIDADES DE DESTINO.
    IF (SELECT DISTINCT U.COD_EMPRESA
        FROM UNIDADE U
        WHERE U.CODIGO = ANY (F_COD_UNIDADES_DESTINO_NOMENCLATURAS)) != (SELECT U.COD_EMPRESA
                                                                         FROM UNIDADE U
                                                                         WHERE U.CODIGO =
                                                                               F_COD_UNIDADE_ORIGEM_COPIA_NOMENCLATURAS)
    THEN
        RAISE EXCEPTION 'A EMPRESA DA UNIDADE DE ORIGEM PRECISA SER A MESMA DAS UNIDADES DE DESTINO!';
    END IF;

    -- DELETA AS NOMENCLATURAS DA(S) UNIDADE(S) DESTINO EXISTENTES NA TABELA PNEU_ORDEM_NOMENCLATURA_UNIDADE
    -- QUE POSSUEM O MESMO CODIGO DE DIAGRAMA DA UNIDADE ORIGEM.
    DELETE
    FROM PNEU_ORDEM_NOMENCLATURA_UNIDADE PONU USING VEICULO_TIPO VT
    WHERE VT.CODIGO = PONU.COD_TIPO_VEICULO
      AND PONU.COD_UNIDADE = ANY (F_COD_UNIDADES_DESTINO_NOMENCLATURAS)
      AND VT.COD_DIAGRAMA IN (SELECT VT.COD_DIAGRAMA
                              FROM VEICULO_TIPO VT
                                       JOIN PNEU_ORDEM_NOMENCLATURA_UNIDADE PONU ON PONU.COD_TIPO_VEICULO = VT.CODIGO
                              WHERE PONU.COD_TIPO_VEICULO IN (SELECT VT.CODIGO
                                                              FROM VEICULO_TIPO VT
                                                              WHERE VT.COD_UNIDADE =
                                                                    F_COD_UNIDADE_ORIGEM_COPIA_NOMENCLATURAS));

    -- COPIA AS NOMECLATURAS DA UNIDADE DE ORIGEM PARA TODAS AS DE DESTINO.
    -- ESSAS DUAS CTES TRATAM TAMBÉM OS SEGUINTES DOIS CASOS:
    -- 1) SE A UNIDADE DE ORIGEM POSSUIR DOIS DIFERENTES TIPOS DE VEÍCULO PARA O MESMO CÓDIGO DE DIAGRAMA, SERÁ PRIORIZADO
    -- AQUELE QUE POSSUIR NOMENCLATURA.
    --
    -- 2) CASO EXISTAM DOIS TIPOS DE VEÍCULO PARA O MESMO DIAGRAMA COM NOMENCLATURA DEFINIDA, APENAS 1 SERÁ CONSIDERADO.
    -- QUAL SERÁ CONSIDERADO NÃO É IMPORTANTE NO MOMENTO.
    WITH DIAGRAMAS AS (SELECT DISTINCT ON (Q.COD_DIAGRAMA) *
                       FROM (SELECT VT.CODIGO       AS COD_TIPO_VEICULO,
                                    VT.COD_UNIDADE  AS COD_UNIDADE,
                                    VT.COD_DIAGRAMA AS COD_DIAGRAMA,
                                    (SELECT PONU.NOMENCLATURA IS NOT NULL
                                     FROM PNEU_ORDEM_NOMENCLATURA_UNIDADE PONU
                                     WHERE PONU.COD_UNIDADE = VT.COD_UNIDADE
                                       AND PONU.COD_TIPO_VEICULO = VT.CODIGO
                                     LIMIT 1)       AS TEM_DIAGRAMA
                             FROM VEICULO_TIPO VT
                             WHERE VT.COD_UNIDADE = F_COD_UNIDADE_ORIGEM_COPIA_NOMENCLATURAS
                             ORDER BY COD_DIAGRAMA, CODIGO) Q
                       WHERE Q.TEM_DIAGRAMA
    ),
         NOMENCLATURAS AS (SELECT D.COD_DIAGRAMA      AS COD_DIAGRAMA,
                                  PONU.POSICAO_PROLOG AS POSICAO_PROLOG,
                                  PONU.NOMENCLATURA   AS NOMENCLATURA
                           FROM DIAGRAMAS D
                                    JOIN PNEU_ORDEM_NOMENCLATURA_UNIDADE PONU
                                         ON PONU.COD_TIPO_VEICULO = D.COD_TIPO_VEICULO
                                             AND PONU.COD_UNIDADE = D.COD_UNIDADE
         )

    INSERT
    INTO PNEU_ORDEM_NOMENCLATURA_UNIDADE (COD_TIPO_VEICULO, COD_UNIDADE, POSICAO_PROLOG, NOMENCLATURA)
    SELECT VT.CODIGO        AS COD_TIPO_VEICULO,
           VT.COD_UNIDADE   AS COD_UNIDADE,
           N.POSICAO_PROLOG AS POSICAO_PROLOG,
           N.NOMENCLATURA   AS NOMENCLATURA
    FROM NOMENCLATURAS N
             CROSS JOIN UNNEST(F_COD_UNIDADES_DESTINO_NOMENCLATURAS) T(COD_UNIDADE)
             JOIN VEICULO_TIPO VT
                  ON VT.COD_UNIDADE = T.COD_UNIDADE
                      AND N.COD_DIAGRAMA = VT.COD_DIAGRAMA
    ORDER BY T.COD_UNIDADE ASC,
             VT.CODIGO ASC;
    SELECT 'NOMENCLATURAS COPIADAS COM SUCESSO DA UNIDADE '
               || F_COD_UNIDADE_ORIGEM_COPIA_NOMENCLATURAS
               || ' PARA A(S) UNIDADE(S) '
               || ARRAY_TO_STRING(F_COD_UNIDADES_DESTINO_NOMENCLATURAS, ', ')
    INTO AVISO_NOMENCLATURAS_COPIADAS;
END;
$$;