CREATE FUNCTION FUNC_PNEU_GET_PRIMEIRA_ULTIMA_AFERICAO(F_COD_PNEU BIGINT)
  RETURNS TABLE(
    COD_PNEU                               BIGINT,
    DATA_HORA_PRIMEIRA_AFERICAO            TIMESTAMP WITH TIME ZONE,
    COD_PRIMEIRA_AFERICAO                  BIGINT,
    COD_UNIDADE_PRIMEIRA_AFERICAO          BIGINT,
    TIPO_PROCESSO_COLETA_PRIMEIRA_AFERICAO TEXT,
    DATA_HORA_ULTIMA_AFERICAO              TIMESTAMP WITH TIME ZONE,
    COD_ULTIMA_AFERICAO                    BIGINT,
    COD_UNIDADE_ULTIMA_AFERICAO            BIGINT,
    TIPO_PROCESSO_COLETA_ULTIMA_AFERICAO   TEXT,
    QUANTIDADE_AFERICOES_PNEU              INTEGER)
LANGUAGE SQL
AS $$
WITH DADOS_AFERICAO AS (
    SELECT
      A.CODIGO                      AS COD_AFERICAO,
      A.COD_UNIDADE                 AS COD_UNIDADE_AFERICAO,
      A.DATA_HORA                   AS DATA_HORA_AFERICAO,
      A.TIPO_PROCESSO_COLETA        AS TIPO_PROCESSO_COLETA_AFERICAO,
      AV.COD_PNEU                   AS COD_PNEU,
      AV.ALTURA_SULCO_CENTRAL_INTERNO,
      AV.ALTURA_SULCO_CENTRAL_EXTERNO,
      AV.ALTURA_SULCO_EXTERNO,
      AV.ALTURA_SULCO_INTERNO,
      ROW_NUMBER()
      OVER (
        PARTITION BY AV.COD_PNEU
        ORDER BY A.DATA_HORA ASC )  AS ROW_NUMBER_ASC,
      ROW_NUMBER()
      OVER (
        PARTITION BY AV.COD_PNEU
        ORDER BY A.DATA_HORA DESC ) AS ROW_NUMBER_DESC
    FROM AFERICAO A
      INNER JOIN AFERICAO_VALORES AV ON A.CODIGO = AV.COD_AFERICAO
    WHERE AV.COD_PNEU = F_COD_PNEU),


    PRIMEIRA_AFERICAO AS (
      SELECT
        DA.COD_PNEU,
        DA.COD_AFERICAO,
        DA.COD_UNIDADE_AFERICAO,
        DA.TIPO_PROCESSO_COLETA_AFERICAO,
        DA.DATA_HORA_AFERICAO
      FROM DADOS_AFERICAO DA
      WHERE DA.ROW_NUMBER_ASC = 1
            AND DA.COD_PNEU = F_COD_PNEU),


    ULTIMA_AFERICAO AS (
      SELECT
        DA.COD_PNEU,
        DA.COD_AFERICAO,
        DA.COD_UNIDADE_AFERICAO,
        DA.TIPO_PROCESSO_COLETA_AFERICAO,
        DA.DATA_HORA_AFERICAO
      FROM DADOS_AFERICAO DA
      WHERE DA.ROW_NUMBER_DESC = 1
            AND DA.COD_PNEU = F_COD_PNEU),


    ANALISES_AFERICOES AS (
      SELECT
        DA.COD_PNEU,
        COUNT(COD_PNEU) :: INTEGER AS QUANTIDADE_AFERICOES_PNEU
      FROM DADOS_AFERICAO DA
      WHERE DA.COD_PNEU = F_COD_PNEU
      GROUP BY DA.COD_PNEU
  )
SELECT
  AA.COD_PNEU                      AS COD_PNEU,
  PA.DATA_HORA_AFERICAO            AS DATA_HORA_PRIMEIRA_AFERICAO,
  PA.COD_AFERICAO                  AS COD_PRIMEIRA_AFERICAO,
  PA.COD_UNIDADE_AFERICAO          AS COD_UNIDADE_PRIMEIRA_AFERICAO,
  PA.TIPO_PROCESSO_COLETA_AFERICAO AS TIPO_PROCESSO_COLETA_PRIMEIRA_AFERICAO,
  UA.DATA_HORA_AFERICAO            AS DATA_HORA_ULTIMA_AFERICAO,
  UA.COD_AFERICAO                  AS COD_ULTIMA_AFERICAO,
  UA.COD_UNIDADE_AFERICAO          AS COD_UNIDADE_ULTIMA_AFERICAO,
  UA.TIPO_PROCESSO_COLETA_AFERICAO AS TIPO_PROCESSO_COLETA_ULTIMA_AFERICAO,
  AA.QUANTIDADE_AFERICOES_PNEU     AS QUANTIDADE_AFERICOES_PNEU
FROM
  ANALISES_AFERICOES AA
  INNER JOIN PRIMEIRA_AFERICAO PA
    ON PA.COD_PNEU = AA.COD_PNEU
  INNER JOIN ULTIMA_AFERICAO UA
    ON UA.COD_PNEU = AA.COD_PNEU
WHERE AA.COD_PNEU = F_COD_PNEU
ORDER BY AA.COD_PNEU;
$$;