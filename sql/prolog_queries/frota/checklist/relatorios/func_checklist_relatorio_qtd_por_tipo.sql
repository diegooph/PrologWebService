CREATE FUNCTION FUNC_CHECKLIST_RELATORIO_QTD_POR_TIPO(
  F_COD_UNIDADES                 BIGINT [],
  F_DATA_HOJE_UTC                DATE,
  F_DIAS_RETROATIVOS_PARA_BUSCAR INTEGER)
  RETURNS TABLE(DATA DATE, DATA_FORMATADA TEXT, TOTAL_CHECKLISTS_SAIDA BIGINT, TOTAL_CHECKLISTS_RETORNO BIGINT)
LANGUAGE PLPGSQL
AS $$
DECLARE
  DATA_INICIAL       DATE := F_DATA_HOJE_UTC + INTERVAL '1' DAY - (INTERVAL '1' DAY * F_DIAS_RETROATIVOS_PARA_BUSCAR);
  DATA_FINAL         DATE := F_DATA_HOJE_UTC + INTERVAL '1' DAY;
  CHECK_TIPO_SAIDA   CHAR := 'S';
  CHECK_TIPO_RETORNO CHAR := 'R';
BEGIN
  RETURN QUERY

  WITH DIAS AS (
      SELECT G.DAY :: DATE AS DATA
      FROM GENERATE_SERIES(DATA_INICIAL, DATA_FINAL, '1 DAY') G(DAY)
      ORDER BY DATA
  ),

      CHECKS_DIA AS (
        SELECT
          (C.DATA_HORA AT TIME ZONE TZ_UNIDADE(C.COD_UNIDADE)) :: DATE AS DATA,
          SUM(CASE WHEN C.TIPO = CHECK_TIPO_SAIDA
            THEN 1
              ELSE 0 END)                                                 TOTAL_CHECKLISTS_SAIDA,
          SUM(CASE WHEN C.TIPO = CHECK_TIPO_RETORNO
            THEN 1
              ELSE 0 END)                                                 TOTAL_CHECKLISTS_RETORNO
        FROM CHECKLIST C
        WHERE
          C.COD_UNIDADE = ANY (F_COD_UNIDADES)
          AND (C.DATA_HORA AT TIME ZONE TZ_UNIDADE(C.COD_UNIDADE)) :: DATE BETWEEN DATA_INICIAL AND DATA_FINAL
        GROUP BY DATA
        ORDER BY DATA
    )

  SELECT
    D.DATA                      AS DATA,
    TO_CHAR(D.DATA, 'DD/MM')    AS DATA_FORMATADA,
    CD.TOTAL_CHECKLISTS_SAIDA   AS TOTAL_CHECKLISTS_SAIDA,
    CD.TOTAL_CHECKLISTS_RETORNO AS TOTAL_CHECKLISTS_RETORNO
  FROM DIAS D
    LEFT JOIN CHECKS_DIA CD ON D.DATA = CD.DATA
  ORDER BY D.DATA;
END;
$$;