-- #####################################################################################################################
-- #####################################################################################################################
-- ################################# ALTERAÇÕES NA CRIPTOGRAFIA DO LOGIN INTERNO #######################################
-- #####################################################################################################################
-- #####################################################################################################################
-- PL-2550

-- CRIA NOVO SCHEMA.
CREATE SCHEMA INTERNO;

-- ALTERA SCHEMA DA TABELA PROLOG_USER
ALTER TABLE IMPLANTACAO.PROLOG_USER SET SCHEMA INTERNO;

-- CRIA PK E CONSTRAINTS.
ALTER TABLE INTERNO.PROLOG_USER DROP CONSTRAINT PROLOG_USER_PKEY;
ALTER TABLE INTERNO.PROLOG_USER ADD CONSTRAINT PK_PROLOG_USER PRIMARY KEY (CODIGO);
ALTER TABLE INTERNO.PROLOG_USER ADD CONSTRAINT UNIQUE_NOME_USUARIO UNIQUE(USERNAME);

DROP FUNCTION IF EXISTS IMPLANTACAO.FUNC_VERIFICA_LOGIN_SENHA(TEXT, TEXT);

-- ALTERA O SCHEMA DA TABELA PROLOG_USER NA FUNCTION FUNC_VERIFICA_LOGIN_SENHA, MODIFICA ATRIBUTOS E RETORNO E ALTERA
-- SCHEMA DA FUNCTION.
CREATE OR REPLACE FUNCTION INTERNO.FUNC_BUSCA_DADOS_USUARIO(F_USERNAME TEXT)
    RETURNS TABLE
            (
                USERNAME TEXT,
                PASSWORD TEXT
            )
    LANGUAGE PLPGSQL
AS
$$
BEGIN
    RETURN QUERY
        SELECT PU.USERNAME,
               PU.PASSWORD
        FROM INTERNO.PROLOG_USER PU
        WHERE PU.USERNAME = F_USERNAME;
END;
$$;

-- ENCRIPTOGRAFA SENHAS DA TABELA EXISTENTE
UPDATE INTERNO.PROLOG_USER SET PASSWORD = '$2a$12$TUpmY1YQNMsMLR5DI7BVhufZOrQefPcJOsu8Epa8UFZuOsD8fxFKO'
WHERE CODIGO = 1 AND USERNAME = 'natan' and PASSWORD = 'aferequevai';

-- CRIA FUNCTION PARA CADASTRAR USUÁRIO E SENHA
CREATE OR REPLACE FUNCTION INTERNO.FUNC_CREATE_LOGIN_SENHA(F_USERNAME TEXT, F_PASSWORD TEXT)
    RETURNS VOID
    LANGUAGE PLPGSQL
AS
$$
DECLARE
    F_CODIGO_USUARIO BIGINT;
BEGIN
    -- VERIFICA SE USUÁRIO JÁ EXISTE.
    IF EXISTS(SELECT PU.CODIGO, PU.PASSWORD FROM INTERNO.PROLOG_USER PU WHERE PU.USERNAME = F_USERNAME)
    THEN
        RAISE EXCEPTION
            'O usuário % já existe.', F_USERNAME;
    END IF;

    -- SE NÃO EXISTIR, CADASTRA.
    INSERT INTO INTERNO.PROLOG_USER (USERNAME, PASSWORD)
    VALUES (F_USERNAME, F_PASSWORD) RETURNING CODIGO INTO F_CODIGO_USUARIO;

    IF (F_CODIGO_USUARIO IS NULL OR F_CODIGO_USUARIO <= 0)
    THEN
        PERFORM THROW_GENERIC_ERROR('Erro ao criar login e senha');
    END IF;
END;
$$;