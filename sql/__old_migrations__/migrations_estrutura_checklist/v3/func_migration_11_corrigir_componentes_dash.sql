create or replace function migration_checklist.func_migration_11_corrigir_componentes_dash()
    returns void
    language plpgsql
as
$func$
begin

    -- Altera JOIN da COSI com a CAP para usar COD_ALTERNATIVA_PRIMEIRO_APONTAMENTO ao invés de COD_ALTERNATIVA.
    CREATE OR REPLACE FUNCTION FUNC_CHECKLIST_OS_RELATORIO_PLACAS_MAIOR_QTD_ITENS_ABERTOS(
      F_COD_UNIDADES             BIGINT [],
      F_TOTAL_PLACAS_PARA_BUSCAR INTEGER)
      RETURNS TABLE(
        NOME_UNIDADE                      CHARACTER VARYING,
        PLACA                             CHARACTER VARYING,
        QUANTIDADE_ITENS_ABERTOS          BIGINT,
        QUANTIDADE_ITENS_CRITICOS_ABERTOS BIGINT)
    LANGUAGE PLPGSQL
    AS $$
    DECLARE
      STATUS_ITENS_ABERTOS CHAR := 'P';
      PRIORIDADE_CRITICA   VARCHAR := 'CRITICA';
    BEGIN
      RETURN QUERY
      WITH PLACAS AS (
          SELECT
            C.PLACA_VEICULO    AS PLACA_VEICULO,
            COUNT(COSI.CODIGO) AS QUANTIDADE_ITENS_ABERTOS,
            COUNT(CASE WHEN CAP.PRIORIDADE = PRIORIDADE_CRITICA
              THEN 1 END)      AS QUANTIDADE_ITENS_CRITICOS_ABERTOS
          FROM CHECKLIST_ORDEM_SERVICO_ITENS COSI
            JOIN CHECKLIST_ORDEM_SERVICO COS
              ON COSI.COD_OS = COS.CODIGO
                 AND COSI.COD_UNIDADE = COS.COD_UNIDADE
            JOIN CHECKLIST_ALTERNATIVA_PERGUNTA CAP
              ON COSI.COD_ALTERNATIVA_PRIMEIRO_APONTAMENTO = CAP.CODIGO
            JOIN CHECKLIST C
              ON C.CODIGO = COS.COD_CHECKLIST
          WHERE C.COD_UNIDADE = ANY (F_COD_UNIDADES)
                AND COSI.STATUS_RESOLUCAO = STATUS_ITENS_ABERTOS
          GROUP BY C.PLACA_VEICULO
          LIMIT F_TOTAL_PLACAS_PARA_BUSCAR
      )

      SELECT
        U.NOME AS NOME_UNIDADE,
        P.PLACA_VEICULO,
        P.QUANTIDADE_ITENS_ABERTOS,
        P.QUANTIDADE_ITENS_CRITICOS_ABERTOS
      FROM PLACAS P
        JOIN VEICULO V ON V.PLACA = P.PLACA_VEICULO
        JOIN UNIDADE U ON V.COD_UNIDADE = U.CODIGO
      ORDER BY
        P.QUANTIDADE_ITENS_ABERTOS DESC,
        P.PLACA_VEICULO ASC
      LIMIT F_TOTAL_PLACAS_PARA_BUSCAR;
    END;
    $$;

    -- Altera JOIN da COSI com a CAP para usar COD_ALTERNATIVA_PRIMEIRO_APONTAMENTO ao invés de COD_ALTERNATIVA.
    CREATE OR REPLACE FUNCTION FUNC_CHECKLIST_OS_RELATORIO_QTD_ITENS_POR_PRIORIDADE(
      F_COD_UNIDADES BIGINT [],
      F_STATUS_ITENS TEXT)
      RETURNS TABLE(
        PRIORIDADE TEXT,
        QUANTIDADE BIGINT)
    LANGUAGE PLPGSQL
    AS $$
    BEGIN
      RETURN QUERY
      WITH PRIORIDADES AS (
          SELECT CAP.PRIORIDADE :: TEXT AS PRIORIDADE
          FROM CHECKLIST_ALTERNATIVA_PRIORIDADE CAP
          ORDER BY CAP.PRAZO ASC
      )

      SELECT
        P.PRIORIDADE       AS PRIORIDADE,
        COUNT(COSI.CODIGO) AS QUANTIDADE
      FROM CHECKLIST_ALTERNATIVA_PERGUNTA CAP
        JOIN CHECKLIST_ORDEM_SERVICO_ITENS COSI
          ON CAP.CODIGO = COSI.COD_ALTERNATIVA_PRIMEIRO_APONTAMENTO
             AND COSI.COD_UNIDADE = ANY (F_COD_UNIDADES)
             AND COSI.STATUS_RESOLUCAO = F_STATUS_ITENS
        RIGHT JOIN PRIORIDADES P
          ON CAP.PRIORIDADE = P.PRIORIDADE
      GROUP BY P.PRIORIDADE
      ORDER BY CASE P.PRIORIDADE
               WHEN 'CRITICA'
                 THEN 1
               WHEN 'ALTA'
                 THEN 2
               WHEN 'BAIXA'
                 THEN 3
               END;
    END;
    $$;
end;
$func$;